* {
    box-sizing: border-box;
}

:root {
    --page-color: rgb(248, 248, 248);
    --pop-out-color: rgb(60, 216, 120);

    --sketchpad-height: 16;
    --sketchpad-height-min-dim: 20rem;
    --sketchpad-height-dim: 80vmin;
    --sketchpad-background-color: rgb(255, 255, 255);
    --sketchpad-outer-border: none;
    --sketchpad-inner-border-color: rgb(240, 240, 240);
    --sketchpad-hover-color-active: var(--pop-out-color);
    --sketchpad-hover-color-inactive: rgb(150, 150, 150);
    --sketchpad-hover-color: var(--sketchpad-hover-color-inactive);
    --sketchpad-box-shadow: 0 0.1rem 0.22rem 0 rgb(120, 120, 120);

    --button-background-color: rgb(238, 238, 238);
    --button-background-color-active: rgb(220, 220, 220);
    --button-background-color-hover: rgb(226, 226, 226);
    --button-light-color-inactive: rgb(210, 210, 210);
    --button-light-color-active: var(--pop-out-color);
    --button-box-shadow: 0 0.08rem 0.15rem 0 rgb(110, 110, 110);
    --button-box-shadow-click: 0 0.03rem 0.1rem 0;

    --eraser-display-stripe-color: hsl(0, 80%, 50%);

    --font-base-color: rgb(80, 80, 80);
    --font-hover-color: rgb(10, 10, 10);

    --theme-label-color-bold: var(--font-base-color);
    --theme-label-color: rgb(160, 160, 160);
    --theme-bg-color: rgb(160, 160, 160);
    --theme-circle-bg-color: rgb(240, 240, 240);
}

.dark-mode {
    --page-color: rgb(35, 35, 35);

    --sketchpad-background-color: rgb(25, 25, 25);
    --sketchpad-inner-border-color: rgb(45, 45, 45);
    
    --button-background-color: rgb(50, 50, 50);
    --button-background-color-active: rgb(68, 68, 68);
    --button-background-color-hover: rgb(62, 62, 62);
    --button-light-color-inactive: rgb(81, 81, 81);

    --eraser-display-stripe-color: hsl(0, 80%, 30%);

    --font-base-color: rgb(180, 180, 180);
    --font-hover-color: rgb(240, 240, 240);

    --theme-label-color-bold: var(--font-base-color);
    --theme-label-color: rgb(100, 100, 100);
    --theme-bg-color: var(--pop-out-color);
    --theme-circle-bg-color: rgb(25, 25, 25);
}

header {
    display: flex;
    justify-content: flex-end;
    align-items: center;
}

header > p {
    font-size: 0.95rem;
    margin: 0.3rem 0.4rem;
    color: var(--theme-label-color);
}

.bold-label {
    color: var(--theme-label-color-bold);
    font-weight: bold;
}

.theme-switch { /* container of switch */
    position: relative;
    display: inline-block;
    --switch-width: 3rem;
    --switch-height: 1.6rem;
    --switch-gap-top: 0.25rem;
    --switch-gap-side: 0.3rem;
    --switch-circle-diameter: calc(var(--switch-height) - 2 * var(--switch-gap-top));
    --switch-transition-time: .3s;
    width: var(--switch-width);
    height: var(--switch-height);
}

.theme-switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.switch-slider { /* background of the switch */
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--theme-bg-color);
    transition: var(--switch-transition-time);
    border-radius: calc(var(--switch-height)/2);
}

.switch-slider:hover {
    background-color: var(--pop-out-color);
}

.switch-slider:before { /* switch circle */
    position: absolute;
    content: "";
    height: var(--switch-circle-diameter);
    width: var(--switch-circle-diameter);
    left: var(--switch-gap-side);
    bottom: var(--switch-gap-top);
    background-color: var(--theme-circle-bg-color);
    transition: var(--switch-transition-time);
    border-radius: 50%;
}

.theme-switch input:checked + .switch-slider {
    background-color: var(--theme-bg-color);
}

.theme-switch input:checked + .switch-slider:before {
    transform: translateX(calc(var(--switch-width) - 2 * var(--switch-gap-side) - var(--switch-circle-diameter)));
}

.theme-switch input:checked + .switch-slider:hover:before {
    background-color: var(--font-hover-color);
}

body {
    font-family: "Segoe UI", sans-serif;
    font-size: 100%;
    color: var(--font-base-color);
    background-color: var(--page-color);
}

main {
    display: grid;
    grid-template-rows: auto 
                        auto 
                        minmax(calc(0.04*var(--sketchpad-height-min-dim)), calc(0.04*var(--sketchpad-height-dim))) 
                        minmax(var(--sketchpad-height-min-dim), var(--sketchpad-height-dim)) 
                        minmax(calc(0.04*var(--sketchpad-height-min-dim)), calc(0.04*var(--sketchpad-height-dim))) 
                        auto;
    justify-items: center;
}

.button {
    margin: 0.5rem 3vw 0.5rem 0;
    height: 2rem;
    width: 6.5rem;
    padding-left: 0.75rem;
    position: relative;
    background-color: var(--button-background-color);
    border: none;
    border-radius: 0;
    cursor: pointer;
    font-size: 0.9rem;
    color: var(--font-base-color);
    box-shadow: var(--button-box-shadow);
}

.button:not(:focus-visible) {
    outline: none;
}

.button:hover {
    background-color: var(--button-background-color-hover);
    color: var(--font-hover-color);
    transform: scale(1.05);
}

.button:active {
    transform: translateY(0.05rem) scale(1.02);
    box-shadow: var(--button-box-shadow-click);
    color: var(--font-hover-color);
    background-color: var(--button-background-color-active);
}

.button::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 0.4rem;
    height: 100%;
    background-size: 100% 200%;
    background-image: linear-gradient(0deg, var(--button-light-color-inactive) 50%, var(--button-light-color-active) 50%);
    transition: background-position 0.5s;
}

.button.unpressed::before {
    background-position: 0 -100%;
}

.button.unpressed:active::before, .button.unpressed:hover::before {
    background-position: 0 0;
}

#display-title {
    cursor: default;
}

#display-title > h1 {
    font-size: 2.6rem;
    margin: 1rem;
    transition: all .7s;
}

#display-title > h1:hover {
    transform: scale(1.1);
    color: var(--font-hover-color);
    transition: all .7s;
}

#display-title > h1::before, #display-title > h1::after {
    content: "//";
    padding: 0 1rem;
    font-size: 2.2rem;
    display: inline-block;
    transform: translateY(-0.2rem);
    transition: all .7s;
}

#display-title > h1:hover::before {
    transform: scale(0.9091) translateY(-0.6rem);
    color: var(--button-light-color-active);
    transition: all .7s;
}

#display-title > h1:hover::after {
    transform: scale(0.9091) translateY(0.2rem);
    color: var(--button-light-color-active);
    transition: all .7s;
}

#sketchpad-buttons {
    margin-bottom: 0.2rem;
}

#current-color {
    min-width: calc(0.8*var(--sketchpad-height-min-dim));
    width: calc(0.8*var(--sketchpad-height-dim));
    border: var(--sketchpad-outer-border);
    border-bottom: 0;
    box-shadow: var(--sketchpad-box-shadow);
}

#current-color::before {
    content: "";
    display: inline-block;
    width: 50%;
    height: 100%;
    transform: translateX(100%);
    background-color: black;
    opacity: 0;
    transition: opacity 0.5s;
}

#current-color.darken::before {
    opacity: 0.5;
}

#sketchpad {
    display: grid;
    min-width: var(--sketchpad-height-min-dim);
    width: var(--sketchpad-height-dim);
    grid-template-columns: repeat(var(--sketchpad-height), 1fr);
    grid-template-rows: repeat(var(--sketchpad-height), 1fr);
    border: var(--sketchpad-outer-border);
    background-color: var(--sketchpad-background-color);
    box-shadow: var(--sketchpad-box-shadow);
}

.sketchpad-cell {
    border: 0.06rem solid var(--sketchpad-inner-border-color);
}

.sketchpad-cell.no-border {
    border: none;
}

.sketchpad-cell:hover, .sketchpad-cell.no-border:hover {
    border: 0.1rem solid var(--sketchpad-hover-color);
    transform: scale(1.1);
}

#darken-toggle {
    margin: 0;
    height: 100%;
    min-width: calc(0.5*var(--sketchpad-height-min-dim));
    width: calc(0.5*var(--sketchpad-height-dim));
    border: var(--sketchpad-outer-border);
    border-top: 0;
    color: var(--font-base-color);
    cursor: pointer;
    padding: 0;
    font-size: 0.75rem;
    box-shadow: var(--sketchpad-box-shadow);
}

#darken-toggle .currently-active {
    display: none;
}

#darken-toggle .currently-passive {
    display: none;
}

#darken-toggle:hover {
    transform: none;
    color: var(--font-hover-color);
}

#darken-toggle:hover .default {
    display: none;
}

#darken-toggle.unpressed:hover .currently-passive {
    display: inline;
}

#darken-toggle:not(.unpressed):hover .currently-active {
    display: inline;
}

#darken-toggle:active {
    transform: translateY(0.05rem);
    color: var(--font-hover-color);
    box-shadow: var(--button-box-shadow-click);
}

#darken-toggle::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    width: 0.4rem;
    height: 100%;
    background-size: 100% 200%;
    background-image: linear-gradient(0deg, var(--button-light-color-inactive) 50%, var(--button-light-color-active) 50%);
    transition: background-position 0.5s;
}

#darken-toggle.unpressed::after {
    background-position: 0 -100%;
}

#darken-toggle.unpressed:active::after, #darken-toggle.unpressed:hover::after {
    background-position: 0 0;
}

#color-selector {
    margin: 0 1vw 0 0;
    height: 2rem;
    width: 2rem;
    border: none;
    border-radius: 0;
    cursor: pointer;
    background-color: var(--button-background-color);
    box-shadow: var(--button-box-shadow);
}

#color-selector::-webkit-color-swatch {
    border: none;
}

#color-selector:not(:focus-visible) {
    outline: none;
}

#color-selector:active {
    transform: translateY(0.05rem) scale(1.02);
    box-shadow: var(--button-box-shadow-click);
    background-color: var(--button-background-color-active);
}

#color-selector:hover {
    background-color: var(--button-background-color-hover);
    transform: scale(1.05);
}

#color-buttons {
    display: flex;
    align-items: center;
    margin-top: 0.3rem;
}

#eraser-button, #clear-button {
    margin-right: 0;
}